package hr.fer.zemris.optjava.dz2;

import java.awt.Color;
import java.awt.Container;
import java.awt.GridLayout;
import java.util.Random;

import javax.swing.JFrame;
import javax.swing.JPanel;

import Jama.Matrix;

public class Jednostavno {

	public static void main(String[] args) {
		
		Function1 f1 = new Function1();
		double x1 = (new Random()).nextDouble() * 10 - 5;
		double x2 = (new Random()).nextDouble() * 10 - 5;
		double[][] A = {{x1}, {x2}};
		Matrix gd = new Matrix(A);
		Matrix nm = new Matrix(A);
		
		int[] X = new int[100];
		int[] Y = new int[100];
		
		for(int i = 0; i < 100; i++) {
			Y[i] = i;
			double[][] a = {{i}};
			X[i] = f1.value(new Matrix(a));
		}
		
		JFrame jf = new JFrame();
		jf.setTitle("FILIP");
		jf.setSize(400, 400);
		jf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		Container pane = jf.getContentPane();
		pane.setLayout(new GridLayout(1, 1));
		pane.add(new FunctionDraw());
		jf.setVisible(true);
		NumOptAlgorithms.gradDescentAlg(f1, 100000, gd);
		NumOptAlgorithms.newtonMethodAlg(f1, 100000, nm);
	}

}
